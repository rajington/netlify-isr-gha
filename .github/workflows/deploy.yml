name: Deploy
run-name: ${{ inputs.paths && format('Deploy {0}', inputs.paths) || github.event.head_commit.message }}

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      paths:
        description: Comma separated paths to generate
        type: string
        required: true
        default: 'foo,bar,baz'

permissions:
  contents: read

concurrency:
  group: deploy
  cancel-in-progress: false

env:
  NODE_VERSION: 18.15.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore dependencies cache
        id: restore-dependencies-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
              ${{ runner.os }}-${{ env.NODE_VERSION }}-nodemodules-

      - name: Install dependencies on cache miss
        run: yarn --frozen-lockfile
        if: steps.restore-dependencies-cache.outputs.cache-hit != 'true'

      - name: Restore Next.js cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      ## Do a normal build/deploy if it's a push event

      - name: Build with Next.js
        if: ${{ github.event_name == 'push' }}
        run: yarn export

      - name: Deploy to Netlify
        if: ${{ github.event_name == 'push' }}
        run: yarn deploy
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      ## Do an incremental build/deploy if it's a workflow dispatch

      - name: Build with Next.js (incremental)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn export
        env:
          PATHS: ${{ inputs.paths }}
  
      - name: Deploy to Netlify (incremental)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: yarn deploy-incremental
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
